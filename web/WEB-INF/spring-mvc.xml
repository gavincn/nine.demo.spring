<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 自动扫描的包名 -->
    <!-- 开启controller注解支持 -->
    <!-- use-default-filters="false" 只扫描指定的注解 -->
    <context:component-scan base-package="com.demo.*"/>
    <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    <!--</context:component-scan>-->
    <!-- 默认的注解映射的支持 -->
    <context:annotation-config/>
    <!-- 视图解释类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <!--/jsp/   -/web/jsp/ -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven/>

    <!-- 如果当前请求为“/”时，则转发到“/helloworld/index” -->
    <!--<mvc:view-controller path="/" view-name="forward:/helloworld/index"/>-->

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="31556926"/>
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/" cache-period="31556926"/>
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/fonts/" cache-period="31556926"/>
    <mvc:resources mapping="/plugins/**" location="/WEB-INF/plugins/" cache-period="31556926"/>
    <mvc:resources mapping="images/**" location="/WEB-INF/images/" cache-period="31556926"/>
    <!-- 当上面要访问的静态资源不包括在上面的配置中时，则根据此配置来访问 -->
    <mvc:default-servlet-handler default-servlet-name="springMVC"/>


    <mvc:interceptors>
        <bean class="com.demo.interceptor.AllInterceptor"/>
        <mvc:interceptor>
            <mvc:mapping path="/login"/>
            <bean class="com.demo.interceptor.TimeInterceptor"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/*"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/tologin"/>
            <!-- /不行 -->
            <bean class="com.demo.interceptor.RoleInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- fuck 必须有id="multipartResolver" -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="102400"/>
        <property name="maxInMemorySize" value="1024"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:res:/hsqldb/test"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>-->
    <!-- spring security -->

    <bean id="myAuthentication" class="com.demo.security.MyAuthentication"/>

    <security:http auto-config="true">
        <security:intercept-url pattern="/index.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <!--要求用户必须有ROLE_USER权限 ROLE_USER为数据库中的一个字段值-->
        <security:intercept-url pattern="/admin" access="ROLE_ADMIN"/>
        <security:intercept-url pattern="/main.jsp" access="ROLE_USER"/>
        <security:form-login login-page="/tologin"/>
    </security:http>

   <!-- <security:jdbc-user-service data-source-ref="dataSource"
                                users-by-username-query=""
                                authorities-by-username-query=""/>-->
    <security:user-service>
        <security:user name="admin" password="admin" authorities="ROLE_ADMIN"/>
        <security:user name="liu" password="liu" authorities="ROLE_USER"/>
    </security:user-service>
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myAuthentication"/>
    </security:authentication-manager>


    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView">
            <value>/errors/error</value>
        </property>
        <property name="defaultStatusCode">
            <value>500</value>
        </property>
        <property name="warnLogCategory">
            <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>
        </property>
    </bean>
    <!--如果没有下句定义，则必须在LogAspectle类中增加@Component-->
    <!--<bean id="l" class="com.demo.aop.LogAspect"/>-->
    <aop:aspectj-autoproxy/>
    <!-- fuck spring aop -->
    <!--<aop:aspectj-autoproxy proxy-target-class="true" />-->
    <!-- 或<aop:aspectj-autoproxy/> 或 下句启用@AspectJ 支持 -->
    <!--<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />-->
    <!-- <aop:config>
         <aop:aspect ref="l">
             <aop:before method="logBefore" pointcut="execution (* com.demo.handler.UserSecurityHandler.*(..))" />
         </aop:aspect>
     </aop:config>-->
</beans>