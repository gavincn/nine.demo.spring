<?xml version="1.0" encoding="UTF-8"?>
<!--
1、log4j2使用说明
共6个级别：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、ALL
使用方式如下：
private static final Logger logger = LogManager.getLogger(实际类名.class.getName());

2、日志说明：
（1）请根据实际情况配置各项参数
（2）需要注意日志文件备份数和日志文件大小，注意预留目录空间
（3）实际部署的时候backupFilePatch变量需要修改成linux目录
3.${prefix:name}语法说明
Prefix	Context
bundle	Resource bundle. The format is ${bundle:BundleName:BundleKey}. The bundle name follows package naming conventions, for example: ${bundle:com.domain.Messages:MyKey}.
ctx	    Thread Context Map (MDC)
date	Inserts the current date and/or time using the specified format
env	    System environment variables
jvmrunargs	A JVM input argument accessed through JMX, but not a main argument; see RuntimeMXBean.getInputArguments(). Not available on Android.
main	A value set with MapLookup.setMainArguments(String[])
map	    A value from a MapMessage
sd	    A value from a StructuredDataMessage. The key "id" will return the name of the StructuredDataId without the enterprise number. The key "type" will return the message type. Other keys will retrieve individual elements from the Map.
sys	    System properties。 ＝jvm
 -->
<configuration status="off" monitorInterval="1800">
    <Properties>
        <Property name="fileName">front.log</Property>
        <!--<Property name="backupFilePatch">${sys:user.dir}/logs/</Property>-->
        <Property name="backupFilePatch">/Users/pingping/devworks/nine.demo.spring/logs/</Property>
    </Properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <!--<ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--这个都知道是输出日志的格式-->
            <PatternLayout charset="UTF-8" pattern="%d{HH:mm:ss.SSS} %t %-5level %class{36} %L %M - %msg%xEx%n"/>
        </Console>

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFile" fileName="${backupFilePatch}${fileName}"
                     filePattern="${backupFilePatch}$${date:yyyy-MM}/app-%d{yyyyMMddHHmmssSSS}.log.gz">
            <PatternLayout charset="UTF-8" pattern="%d{yyyy.MM.dd HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <SizeBasedTriggeringPolicy size="20MB"/><!-- 日志文件大小 -->
            <DefaultRolloverStrategy max="20"/><!-- 最多保留文件数 -->
        </RollingFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <Logger name="logger" level="trace" additivity="true">
            <AppenderRef ref="RollingFile"/>
        </Logger>
        <!--建立一个默认的root的logger root||Root-->
        <Root level="TRACE">
            <AppenderRef ref="Console"/>
            <!--<AppenderRef ref="RollingFile"/>--><!--支持多个Appender-->
        </Root>
    </loggers>
</configuration>